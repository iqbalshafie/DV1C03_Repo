pipeline {
    agent any

    stages {
        stage('S1_5719303J') {
            steps {
                echo "Stage1_5719303J : Release Environment Preparation Completed"
            }
        }
        
        
        stage('S2_5719303J') {
            steps {
                script {
                    def imageName = 'wb1_image_5719303j' 
                    def containerName = 'WebApp_5719303J' 

                    sh "docker stop ${containerName}"
                    sh "docker rm ${containerName}"

                    sh "docker run -d --name ${containerName} -p 31200:80 ${imageName}"
                }
            }
      }
        
        stage('S3_5719303J') {
            parallel {
                stage('S3 API Test') {
                    steps {
                        echo "Stage3_5719303J: API Test Completed"
                    }
                }
                stage('S3 Scan Test') {
                    steps {
                        echo "Stage3_5719303J: Scan Test Completed"
                    }
                }
            }
        }
        
        stage('S4_5719303J') {
            steps {
                script {
                    s4Input = input(id: 'S4Input', message: '5719303J, proceed to release the work to next phase?', parameters: [booleanParam(defaultValue: true, description: 'Click Proceed or Abort', name: 'Proceed')])
                    if (s4Input) {
                        env.DECISION = 'proceed'
                    } else {
                        env.DECISION = 'abort'
                    }
                }
            }
        }
        
        stage('S5_5719303J') {
            steps {
                script {
                    if (env.DECISION == 'proceed') {
                        echo "Stage5_5719303J : Work Release â€“ Proceeds to Next Phase"
                    } else {
                        echo "Stage5_5719303J : Work Release - Stops"
                        currentBuild.result = 'ABORTED'
                    }
                }
            }
        }
    }
}
